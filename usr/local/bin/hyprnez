#!/bin/bash


if [[ "$1" == "keys" ]]; then
    echo -e "\e[35m Default Keybinds:\e[0m"
    echo "Win+Q             # close window                  Win+left_mouse    # move window"
    echo "Win+W             # toggle window fullscreen      Win+right_mouse   # resize window"
    echo "Win+E             # toggle window floating        Win+T             # toggle split"
    echo "Win+1,+2,+3..     # switch desktop                Win+Shift+1..     # move window to desktop"
    echo "Win+mouse_wheel   # switch desktop                Win+R             # resize but not float"
    echo "Win+A             # apps menu                     Win+Esc           # logout menu"
    echo "Win+Backspace     # lock pc                       CapsLock          # change keyboard layout"
    echo "Printscreen       # screenshot to clipboard       Alt+Prinscreen    # screenshot saved to Pictures/Screenshots"
    echo "Win+Printscreen   # area screenshot to clipboard  lCtrl+Esc         # toggle waybar"
    echo -e \n
    echo "Win+Z             # terminal (Kitty)              Win+S             # files (Dolphin)"
    echo "Win+X             # VS Code                       Win+D             # browser (Firefox)"
    echo "Win+X             # VS Code                       Win+F             # Telegram"


elif [[ "$1" == "nezuko" ]]; then
    swww img ~/Pictures/Wallpapers/nezuko.jpg

elif [[ "$1" == "monitor" ]]; then
    hyprctl monitors all


elif [[ "$1" == "config" && "$2" == "keys" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/keybinds.conf
    else
        nano ~/.config/hypr/keybinds.conf
    fi
elif [[ "$1" == "config" && "$2" == "monitor" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/monitor.conf
    else
        nano ~/.config/hypr/monitor.conf
    fi
elif [[ "$1" == "config" && "$2" == "windows" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/windows.conf
    else
        nano ~/.config/hypr/windows.conf
    fi
elif [[ "$1" == "config" && "$2" == "input" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/input.conf
    else
        nano ~/.config/hypr/input.conf
    fi
elif [[ "$1" == "config" && "$2" == "autostart" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/autostart.conf
    else
        nano ~/.config/hypr/autostart.conf
    fi
elif [[ "$1" == "config" && "$2" == "env" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypr/env.conf
    else
        nano ~/.config/hypr/env.conf
    fi
elif [[ "$1" == "config" && "$2" == "animation" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/animation.conf
    else
        nano ~/.config/animation.conf
    fi
elif [[ "$1" == "config" && "$2" == "look" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/look.conf
    else
        nano ~/.config/look.conf
    fi
elif [[ "$1" == "config" && "$2" == "hypr" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hyprland.conf
    else
        nano ~/.config/hyprland.conf
    fi
elif [[ "$1" == "config" && "$2" == "idle" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hypridle.conf
    else
        nano ~/.config/hypridle.conf
    fi
elif [[ "$1" == "config" && "$2" == "lock" ]]; then
    if command -v code >/dev/null 2>&1; then
        code ~/.config/hyprock.conf
    else
        nano ~/.config/hyprock.conf
    fi




elif [[ "$1" == "icons" ]]; then
    echo "hoose color:"
    echo "1) black"
    echo "2) blue"
    echo "3) brown"
    echo "4) dracula"
    echo "5) green"
    echo "6) grey"
    echo "7) manjaro"
    echo "8) nord"
    echo "9) orange"
    echo "10) pink"
    echo "11) purple"
    echo "12) red"
    echo "13) standard"
    echo "14) ubuntu"
    echo "15) yellow"
    read -p "Ð•nter color number: " color_number
    case $color_number in
        1) color="black" ;;
        2) color="blue" ;;
        3) color="brown" ;;
        4) color="dracula" ;;
        5) color="green" ;;
        6) color="grey" ;;
        7) color="manjaro" ;;
        8) color="nord" ;;
        9) color="orange" ;;
        10) color="pink" ;;
        11) color="purple" ;;
        12) color="red" ;;
        13) color="standard" ;;
        14) color="ubuntu" ;;
        15) color="yellow" ;;
        *) echo "Invalid input"; exit 1 ;;
    esac
    kwriteconfig6 --file ~/.config/kdeglobals --group Icons --key Theme "Tela-circle-$color"
    gsettings set org.gnome.desktop.interface icon-theme "Tela-circle-$color"


elif [[ "$1" == "reload" && "$2" == "hypr" ]]; then
    hyprctl reload
elif [[ "$1" == "reload" && "$2" == "mako" ]]; then
    makoctl reload
elif [[ "$1" == "layers" ]]; then
    hyprctl clients
elif [[ "$1" == "notify" ]]; then
    notify-send "Title1" "NOW"







elif [[ "$1" == "wallpaper" ]]; then
    WALLPAPER_DIR=~/Pictures/Wallpapers
    echo "Searching for images in: $WALLPAPER_DIR"
    cd "$WALLPAPER_DIR" || { echo "Directory not found: $WALLPAPER_DIR"; exit 1; }
    images=($(ls -1 *.jpg *.jpeg *.png 2>/dev/null))
    if [ ${#images[@]} -eq 0 ]; then
        echo "No images found in $WALLPAPER_DIR"
        exit 1
    fi
    echo "Available images:"
    for i in "${!images[@]}"; do
        echo "$((i+1)). ${images[$i]}"
    done
    echo -n "Enter the number of the image to set it as wallpaper: "
    read choice
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -le 0 ] || [ "$choice" -gt ${#images[@]} ]; then
        echo "Invalid input. Please enter a number between 1 and ${#images[@]}."
        exit 1
    fi
    selected_image="${images[$((choice-1))]}"
    swww img "$WALLPAPER_DIR/$selected_image"
    echo "Wallpaper set to: $WALLPAPER_DIR/$selected_image"




elif [[ "$1" == "slideshow" && "$2" == "enable" ]]; then
    systemctl --user enable random-wallpaper.timer
    systemctl --user start random-wallpaper.timer


elif [[ "$1" == "slideshow" && "$2" == "disable" ]]; then
    systemctl --user disable random-wallpaper.timer
    systemctl --user stop random-wallpaper.timer


elif [[ "$1" == "slideshow" && "$2" == "next" ]]; then
    exec /usr/local/bin/random_wallpaper


else
    echo -e "\n"
    echo -e "\e[35mAvailable commands:\e[0m"
    echo -e "\n"
    echo "keys                             # show default keybinds"
    echo "nezuko                           # set default wallpaper"
    echo "monitor                          # show my monitors"
    echo -e "\n"
    echo "config keys                      # edit keybinds"
    echo "config monitor                   # edit monitor settings"
    echo "config input                     # keyboard and layouts"
    echo "config windows                   # windows behavior"
    echo "config autostart                 # autostart"
    echo "config env                       # env"
    echo "config animation                 # animation"
    echo "config appearance                # env"
    echo "config lock                      # lockscreen"
    echo "config idle                      # lock timers"
    echo "config hypr                      # other settings"
    echo -e "\n"
    echo "icons                            # change icons"
    echo "reload hypr                      # reload hyprland configs"
    echo "reload mako                      # reload mako config"
    echo "layers                           # show current layers"
    echo "notify                           # send test notification"
    echo -e "\n"
    echo "wallpaper                        # set wallpaper from Pictures/Wallpapers"
    echo "slideshow enable                 # set random wallpaper every 5 min"
    echo "slideshow disable                # turn off slideshow"
    echo "slideshow next                   # next wallpaper"
fi
